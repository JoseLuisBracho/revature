{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fprq2\fcharset0 Segoe UI;}{\f3\fmodern\fprq1\fcharset0 Consolas;}{\f4\fswiss\fprq2\fcharset0 Helvetica;}{\f5\fnil\fcharset0 Calibri;}{\f6\fnil\fcharset2 Symbol;}}
{\colortbl ;\red51\green51\blue51;\red255\green255\blue255;\red0\green0\blue0;\red0\green112\blue192;\red255\green246\blue234;\red248\green248\blue248;\red0\green128\blue128;\red106\green107\blue108;\red97\green11\blue75;}
{\*\listtable 
{\list\listhybrid
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f6\jclisttab\tx0}
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f6\jclisttab\tx0}\listid1 }}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\widctlpar\sa160\sl252\slmult1\qj\f0\fs48 ACID\par
\cf1\highlight2\fs22 ACID Properties in SQL ensures Data Integrity during a transaction.\cf0\highlight0\par

\pard\cbpat2\widctlpar\sa420\qj\cf1\fs24 Definition of ACID properties:\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1320\sb100\sa100\qj\b Atomicity:\b0  The atomicity acid property in SQL. It means either all the operations (insert, update, delete) inside a transaction take place or none. Or you can say, all the statements (insert, update, delete) inside a transaction are either completed or rolled back.\par

\pard\cbpat2\widctlpar\sb100\sa100\qj\par

\pard\cbpat2 
{\listtext\f0\u10625?\tab}\ls1\widctlpar\fi-360\li1320\sb100\sa100\qj\b Consistency:\b0  This SQL ACID property ensures database consistency. It means, whatever happens in the middle of the transaction, this acid property will never leave your database in a half-completed state.\par

\pard\cbpat2 
{\listtext\f0\u10625?\tab}\ls1\ilvl1\widctlpar\fi-360\li2640\sb100\sa100\qj If the transaction completed successfully, then it will apply all the changes to the database.\par
{\listtext\f0 1\tab}If there is an error in a transaction, then all the changes that already made will be rolled back automatically. It means the database will restore to its state that it had before the transaction started.\par
{\listtext\f0 2\tab}If there is a system failure in the middle of the transaction, then also, all the changes made already will automatically rollback.\par

\pard\cbpat2\widctlpar\sb100\sa100\qj\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1320\sb100\sa100\qj\b Isolation:\b0  Every transaction is individual, and One transaction can\rquote t access the result of other transactions until the transaction completed. Or, you can\rquote t perform the same operation using multiple transactions at the same time. We will explain this SQL acid property in a separate article.\par

\pard\cbpat2\widctlpar\sb100\sa100\qj\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1320\sb100\sa100\qj\b Durability:\b0  Once the transaction completed, then the changes it has made to the database will be permanent. Even if there is a system failure, or any abnormal changes also, this SQL acid property will safeguard the committed data.\par

\pard\widctlpar\sa160\sl252\slmult1\qj\par
Consider a banking transaction where you\rquote re withdrawing money from checking to deposit in your saving account. \par

\pard\cbpat2\widctlpar\qj The transaction is Atomic. Meaning, the operation to deduct funds from checking cannot complete unless the operation to deposit into savings succeeds. Any interruption cancels the entire transaction.\par
The transaction has Consistency to ensure the audit trail is saved. If this journal entry fails, then the entire transfer is aborted and accounts restored to original balances.\par
Isolation ensures that other banking transactions don\rquote t affect the outcome of your transfer. Other transaction to alter your checking balance must wait until your transaction completes.\par
To operation is Durable. Once the transaction is saved or committed, it can\rquote t be \ldblquote lost.\rdblquote  Data won\rquote t go missing after a power outage or system crash.\par

\pard\widctlpar\sa160\sl252\slmult1\par

\pard\widctlpar\sa160\sl252\slmult1\qj\fs48 Aggregates functions:\par
\cf3\highlight2\fs27 An SQL aggregate function calculates on a set of values and returns a single value.\par
Because an aggregate function operates on a set of values, it is often used with the \cf4\highlight0\fs22 GROUP BY \cf3\highlight2\fs27 clause of the \cf4\highlight0\fs22 SELECT\cf0  \cf3\highlight2\fs27 statement. The \highlight5\f1\fs20 GROUP BY\highlight2\f0\fs27  clause divides the result set into groups of values and the aggregate function returns a single value for each group.\par
\par

\pard\cbpat2\widctlpar\sa390\qj\highlight0 The following are the commonly used SQL aggregate functions:\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1245\qj\cf4\fs22 AVG()\cf3\fs27\endash  returns the average of a set.\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1245\sb100\sa100\qj\cf4\fs22 COUNT()\cf3\fs27\endash  returns the number of items in a set.\par
{\pntext\f6\'B7\tab}\cf4\fs22 MAX()\cf3\fs27\endash  returns the maximum value in a set.\par
{\pntext\f6\'B7\tab}\cf4\fs22 MIN()\cf3\fs27\endash  returns the minimum value in a set\par
{\pntext\f6\'B7\tab}\cf4\fs22 SUM()\cf3\fs27\endash  returns the sum of all or distinct values in a set\par

\pard\widctlpar\sa160\sl252\slmult1\highlight2\f2\par
\f0 Example\par

\pard\widctlpar\cf1\highlight0\b\f3\fs22 SELECT\highlight6\b0  \par
    department_name, \highlight0\b ROUND\highlight6\b0 (\highlight0\b AVG\highlight6\b0 (salary), \cf7\highlight0 0\cf1\highlight6 ) avg_salary\par
\highlight0\b FROM\highlight6\b0\par
    employees\par
        \highlight0\b INNER\highlight6\b0  \highlight0\b JOIN\highlight6\b0\par
    departments \highlight0\b USING\highlight6\b0  (department_id)\par
\highlight0\b GROUP\highlight6\b0  \highlight0\b BY\highlight6\b0  department_name\par

\pard\widctlpar\sa160\sl252\slmult1\highlight0\b ORDER\highlight6\b0  \highlight0\b BY\highlight6\b0  department_name;\par
\par
\cf0\highlight2\f0\fs32 Non aggregate function:\par

\pard\widctlpar\b Mathematical functions:\par

\pard\widctlpar\qj\b0\fs24\par
A mathematical function executes a mathematical operation usually based on input values that are provided as arguments, and return a numeric value as the result of the operation. Mathematical functions operate on numeric data such as decimal, integer, float, real, smallint, and tinyint. Some Arithmetic functions are: \highlight0\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent360{\pntxtb\'B7}}\widctlpar\fi-360\li720\sb100\sa100\sl360\slmult0\fs22 abs()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 ceil()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 floor()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 exp()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 ln()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 mod()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 power()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 sqrt()\f4\fs21\par

\pard\widctlpar\sa160\sl252\slmult1\qj\highlight2\f0\fs24\par

\pard\widctlpar\qj A character or string function is a function which takes one or more characters or numbers as parameters and returns a character value. Basic string functions offer a number of capabilities and return a string value as a result set. Some Character functions are: \highlight0\par

\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent360{\pntxtb\'B7}}\widctlpar\fi-360\li720\sb100\sa100\sl360\slmult0\fs22 lower()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 upper()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 trim()\f4\fs21\par
{\pntext\f6\'B7\tab}\f0\fs22 translate()\f4\fs21\par

\pard\widctlpar\sa160\sl252\slmult1\cf8\highlight2\f0\fs27\par

\pard\widctlpar\cf0\b\fs32 Scalar functions:\par
\b0\fs24\par
These functions are based on user input, these too returns single value.\par
\highlight0\par

\pard\cbpat2 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li1260 UCASE()\par
{\pntext\f0 2.\tab}LCASE()\par
{\pntext\f0 3.\tab}MID()\par
{\pntext\f0 4.\tab}LEN()\par
{\pntext\f0 5.\tab}ROUND()\par
{\pntext\f0 6.\tab}NOW()\par
{\pntext\f0 7.\tab}FORMAT()\par

\pard\widctlpar\sa160\sl252\slmult1\cf8\highlight2\fs27\par

\pard\widctlpar\cf0\b\fs32 Date \endash  Time functions\par

\pard\widctlpar\sa160\sl252\slmult1\fs22\par
\fs24 NOW():\b0  Returns the current date and time\par
\b CURDATE()\b0 : Returns the current date\par
\b CURTIME(): \b0 Returns the current time\par
\b DATE()\b0 : Extracts the date part of a date or date/time expression\par
\b EXTRACT():\b0  Returns a single part of a date/time. \expndtw-2 There are several units that can be considered but only some are used such as:\par
MICROSECOND, SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, YEAR, etc.\par
\expndtw0\b DATE_ADD() :\b0  Adds a specified time interval to a date. \expndtw-2 Where, date \endash  valid date expression and expr is the number of intervals we want to add.\highlight0\line\highlight2 and type can be one of the following:\highlight0\line\highlight2 MICROSECOND, SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, YEAR, etc.\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1260\highlight0\expndtw0\b DATE_SUB():\b0  Subtracts a specified time interval from a date. Syntax for DATE_SUB is same as DATE_ADD just the difference is that DATE_SUB is used to subtract a given interval of date.\par
{\pntext\f6\'B7\tab}\b DATEDIFF(): \b0 Returns the number of days between two dates.\par

\pard\widctlpar\sa160\sl252\slmult1\cf8\highlight2\par
\cf0\b DATE_FORMAT():\b0  Displays date/time data in different formats\par

\pard\cbpat2\widctlpar\sa150\highlight0\expndtw-2 date is a valid date and format specifies the output format for the date/time. The formats that can be used are:\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1260\expndtw0 %a-Abbreviated weekday name (Sun-Sat)\par
{\pntext\f6\'B7\tab}%b-Abbreviated month name (Jan-Dec)\par
{\pntext\f6\'B7\tab}%c-Month, numeric (0-12)\par
{\pntext\f6\'B7\tab}%D-Day of month with English suffix (0th, 1st, 2nd, 3rd)\par
{\pntext\f6\'B7\tab}%d-Day of month, numeric (00-31)\par
{\pntext\f6\'B7\tab}%e-Day of month, numeric (0-31)\par
{\pntext\f6\'B7\tab}%f-Microseconds (000000-999999)\par
{\pntext\f6\'B7\tab}%H-Hour (00-23)\par
{\pntext\f6\'B7\tab}%h-Hour (01-12)\par
{\pntext\f6\'B7\tab}%I-Hour (01-12)\par
{\pntext\f6\'B7\tab}%i-Minutes, numeric (00-59)\par
{\pntext\f6\'B7\tab}%j-Day of year (001-366)\par
{\pntext\f6\'B7\tab}%k-Hour (0-23)\par
{\pntext\f6\'B7\tab}%l-Hour (1-12)\par
{\pntext\f6\'B7\tab}%M-Month name (January-December)\par
{\pntext\f6\'B7\tab}%m-Month, numeric (00-12)\par
{\pntext\f6\'B7\tab}%p-AM or PM\par
{\pntext\f6\'B7\tab}%r-Time, 12-hour (hh:mm:ss followed by AM or PM)\par
{\pntext\f6\'B7\tab}%S-Seconds (00-59)\par
{\pntext\f6\'B7\tab}%s-Seconds (00-59)\par
{\pntext\f6\'B7\tab}%T-Time, 24-hour (hh:mm:ss)\par
{\pntext\f6\'B7\tab}%U-Week (00-53) where Sunday is the first day of week\par
{\pntext\f6\'B7\tab}%u-Week (00-53) where Monday is the first day of week\par
{\pntext\f6\'B7\tab}%V-Week (01-53) where Sunday is the first day of week, used with %X\par
{\pntext\f6\'B7\tab}%v-Week (01-53) where Monday is the first day of week, used with %x\par
{\pntext\f6\'B7\tab}%W-Weekday name (Sunday-Saturday)\par
{\pntext\f6\'B7\tab}%w-Day of the week (0=Sunday, 6=Saturday)\par
{\pntext\f6\'B7\tab}%X-Year for the week where Sunday is the first day of week, four digits, used with %V\par
{\pntext\f6\'B7\tab}%x-Year for the week where Monday is the first day of week, four digits, used with %v\par
{\pntext\f6\'B7\tab}%Y-Year, numeric, four digits\par
{\pntext\f6\'B7\tab}%y-Year, numeric, two digits\par

\pard\widctlpar\sa160\sl252\slmult1\highlight2\par

\pard\widctlpar\sa160\sl252\slmult1\qj\cf1\highlight0\fs48 Set operations\par

\pard\cbpat2\widctlpar\sb100\sa100\sl312\slmult0\cf9\fs32 1. Union\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent360{\pntxtb\'B7}}\widctlpar\fi-360\li720\sb60\sa100\sl315\slmult0\qj\cf3\fs24 The SQL Union operation is used to combine the result of two or more SQL SELECT queries.\par
{\pntext\f6\'B7\tab}In the union operation, all the number of datatype and columns must be same in both the tables on which UNION operation is being applied.\par
{\pntext\f6\'B7\tab}The union operation eliminates the duplicate rows from its resultset.\par

\pard\cbpat2\widctlpar\sb100\sa100\b Syntax\b0\par

\pard 
{\pntext\f3 1.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sl315\slmult0\f3\fs22 SELECT column_name FROM table1 \par
{\pntext\f3 2.\tab}UNION \par

\pard 
{\pntext\f3 3.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sa120\sl315\slmult0 SELECT column_name FROM\~table2; \par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight2\f0\fs27\par

\pard\cbpat2\widctlpar\s3\sb100\sa100\sl312\slmult0\cf9\highlight0\fs32 2. Union All\par

\pard\cbpat2\widctlpar\sb100\sa100\cf3\fs24 Union All operation is equal to the Union operation. It returns the set without removing duplication and sorting the data.\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight2\fs27\par

\pard\cbpat2\widctlpar\sb100\sa100\sl312\slmult0\cf9\highlight0\fs32 3. Intersect\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent360{\pntxtb\'B7}}\widctlpar\fi-360\li720\sb60\sa100\sl315\slmult0\cf3\fs24 It is used to combine two SELECT statements. The Intersect operation returns the common rows from both the SELECT statements.\par
{\pntext\f6\'B7\tab}In the Intersect operation, the number of datatype and columns must be the same.\par
{\pntext\f6\'B7\tab}It has no duplicates and it arranges the data in ascending order by default.\par

\pard\cbpat2\widctlpar\sb100\sa100\b Syntax\b0\par

\pard 
{\pntext\f3 1.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sl315\slmult0\f3\fs22 SELECT column_name FROM table1 \par
{\pntext\f3 2.\tab}INTERSECT \par

\pard 
{\pntext\f3 3.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sa120\sl315\slmult0 SELECT column_name FROM table2; \par

\pard\widctlpar\sa160\sl252\slmult1\f0\fs24\par

\pard\cbpat2\widctlpar\sb100\sa100\sl312\slmult0\cf9\fs32 4. Minus\par

\pard\cbpat2{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent360{\pntxtb\'B7}}\widctlpar\fi-360\li720\sb60\sa100\sl315\slmult0\cf3\fs24 It combines the result of two SELECT statements. Minus operator is used to display the rows which are present in the first query but absent in the second query.\par
{\pntext\f6\'B7\tab}It has no duplicates and data arranged in ascending order by default.\par

\pard\cbpat2\widctlpar\sb100\sa100\b Syntax:\b0\par

\pard 
{\pntext\f3 1.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sl315\slmult0\f3\fs22 SELECT column_name FROM table1 \par
{\pntext\f3 2.\tab}MINUS \par

\pard 
{\pntext\f3 3.\tab}{\*\pn\pnlvlbody\pnf3\pnindent360\pnstart1\pndec{\pntxta.}}
\widctlpar\fi-360\li720\sa120\sl315\slmult0 SELECT column_name FROM table2; \par

\pard\sa200\sl276\slmult1\cf0\f5\lang9\par
}
 